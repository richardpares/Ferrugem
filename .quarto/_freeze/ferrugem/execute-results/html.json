{
  "hash": "189313f8a10273f30bb87ae27d32d888",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \" Área abaixo da curva de progresso da doença (AACPD)\"\nauthor: \"Amanda Pereira Honório & Richard Pardes-Espinosa\"\ndate: \"2024-06-26\"\nformat: html\ntoc: true\nnumber-sections: true\ncode-fold: show\n---\n\n\n## Preparar dados\n\nComo o *Dataframe* contendo os dados de incidência, severidade e defolha da ferrugem do cafeeiro está localizado em uma planilha do Excel chamada ferrugem, utilizou-se a função `read_excel` do pacote `readxl` para realizar a importação dos dados. O DataFrame foi então atribuído ao objeto denominado `dato`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregamento pacotes\nlibrary(readxl)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.5.1     ✔ stringr   1.5.0\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n### Importação dos dados incidência\n\nA tabela contém dados sobre a incidência da ferrugem do cafeeiro ao longo do tempo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Chamar dados incidência\ndato1 <- read_excel(\"ferrugem1.xlsx\",\"Inc\")\ndato1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 9\n     Gen   Rep   `0`  `30`  `60`  `90` `120` `150` `180`\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1     1     0   0     0     0    0     6.67 100  \n 2     1     2     0   0     0    20    3.70 11.6   76.2\n 3     1     3     0   0     0    21.7  1.85  5.79  70.2\n 4     1     4    10  10    64.3  20   73.9  32.5   25.9\n 5     1     5     0   0     0     0   26.7  20.8   55  \n 6     2     1     0  10.6  78.9  20   49.4  68.9  100  \n 7     2     2     0   0    60    23.3 58.6  60.9  100  \n 8     2     3     0   0    85.7  40   48.1  41.5  100  \n 9     2     4     0   0    11.1  33.3 41.1  74.2  100  \n10     2     5     0   0    14.3  40   19.4  21.2  100  \n# ℹ 830 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Formato largo\ndf1 <- dato1 |> \n  pivot_longer(cols = 3:9, \n               names_to = \"time\", \n               values_to = \"incidence\")\ndf1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5,880 × 4\n     Gen   Rep time  incidence\n   <dbl> <dbl> <chr>     <dbl>\n 1     1     1 0          0   \n 2     1     1 30         0   \n 3     1     1 60         0   \n 4     1     1 90         0   \n 5     1     1 120        0   \n 6     1     1 150        6.67\n 7     1     1 180      100   \n 8     1     2 0          0   \n 9     1     2 30         0   \n10     1     2 60         0   \n# ℹ 5,870 more rows\n```\n\n\n:::\n:::\n\n\n### Importação dos dados severidade\n\nA tabela contém dados sobre a severidade da ferrugem do cafeeiro ao longo do tempo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Chamar dados severity\ndato2 <- read_excel(\"ferrugem1.xlsx\",\"Sev\")\ndato2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 9\n     Gen   Rep   `0`  `30`  `60`   `90`  `120`  `150` `180`\n   <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl>\n 1     1     1   0   0     0     0      0      0.0667 3.25 \n 2     1     2   0   0     0     0      0.0556 0.177  1.42 \n 3     1     3   0   0     0     0.0992 0.0556 0.0764 1.25 \n 4     1     4   0.2 0.2   1     0.952  2.08   0.558  0.455\n 5     1     5   0   0     0     0.0167 0.575  0.417  0.7  \n 6     2     1   0   0.106 0.894 0.804  0.795  0.956  4    \n 7     2     2   0   0     0.6   0.660  1.05   0.979  3    \n 8     2     3   0   0     0.857 0.964  0.835  0.680  3.25 \n 9     2     4   0   0     0.111 0.954  0.991  2.01   3.1  \n10     2     5   0   0     0.143 0.401  0.343  0.461  3.64 \n# ℹ 830 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Formato largo\ndf2 <- dato2 |> \n  pivot_longer(cols = 3:9, \n               names_to = \"time\", \n               values_to = \"severity\")\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5,880 × 4\n     Gen   Rep time  severity\n   <dbl> <dbl> <chr>    <dbl>\n 1     1     1 0       0     \n 2     1     1 30      0     \n 3     1     1 60      0     \n 4     1     1 90      0     \n 5     1     1 120     0     \n 6     1     1 150     0.0667\n 7     1     1 180     3.25  \n 8     1     2 0       0     \n 9     1     2 30      0     \n10     1     2 60      0     \n# ℹ 5,870 more rows\n```\n\n\n:::\n:::\n\n\n### Importação dos dados desfolha\n\nA tabela contém dados sobre a desfolha do cafeeiro ocasionada pela ferrugem do cafeeiro ao longo do tempo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Chamar dados defoliation \ndato3 <- read_excel(\"ferrugem1.xlsx\",\"Def\")\ndato3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 9\n     Gen   Rep   `0`  `30`  `60`  `90` `120` `150` `180`\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1     1     0     0     0   0    36.7  48.3  44.2\n 2     1     2    20    20     0  20    26.7  30    25  \n 3     1     3    10    10     0  21.7  21.7  28.3  21.7\n 4     1     4    35    35    30  20    51.7  63.3  36.7\n 5     1     5    40    40     0   0    35    45    22.5\n 6     2     1     0     5     5  20    53.3  58.3  41.7\n 7     2     2     0     0     0  23.3  46.7  40    40  \n 8     2     3    30    30    30  40    38.3  31.7  45.8\n 9     2     4    10    10    10  33.3  36.7  63.3  41.7\n10     2     5    30    30    30  40    26.7  30    30  \n# ℹ 830 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Formato largo\ndf3 <- dato3 |> \n  pivot_longer(cols = 3:9, \n               names_to = \"time\", \n               values_to = \"defolation\")\ndf3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5,880 × 4\n     Gen   Rep time  defolation\n   <dbl> <dbl> <chr>      <dbl>\n 1     1     1 0            0  \n 2     1     1 30           0  \n 3     1     1 60           0  \n 4     1     1 90           0  \n 5     1     1 120         36.7\n 6     1     1 150         48.3\n 7     1     1 180         44.2\n 8     1     2 0           20  \n 9     1     2 30          20  \n10     1     2 60           0  \n# ℹ 5,870 more rows\n```\n\n\n:::\n:::\n\n\nPara que possa ser gerado um gráfico para visualização dos dados, a tabela foi transformada para o formato longo, utilizando a função `pivot_longer`.\n\n\n## Análise exploratória dos dados\n\nUtilizando o pacote `ggplot2`, os dados de incidência, severidade e da desfolha da doença foram explorados visualmente por meio de gráfico de pontos.\n\nGráfico de pontos: Primeiramente, visualizou-se a distribuição dos pontos de inicidência ao longo do tempo por meio de um gráfico de pontos básico. Como havia muitos pontos e para evitar sobreposição, foi utilizada a função `geom_jitter`, que promove a desagregação dos pontos no gráfico. Dentro desta função, foram definidos o tamanho e a quantidade de deslocamento dos pontos.\n\nPara a incidência:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregar bibliotecas\nlibrary(ggplot2)\nlibrary(ggthemes)\n\n# Crie gráficos e reordene observações em relação ao tempo\ndf1$time <- factor(df1$time, levels = c(0, 30, 60, 90, 120, 150, 180))\n\nplot1 <- df1 |> \n  ggplot(aes(time, incidence), \n             incidence) + \n  geom_jitter() + \n  theme_minimal() + \n  labs(subtitle = \"Progresso da doença\",\n       x = \"Tempo (dias)\", \n       y = \"Incidência (%)\") + \n  theme(axis.text.x = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 0.5, \n                                   vjust = 1)) + \n  theme(axis.text.y = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 1, \n                                   vjust = 0.4),\n        axis.title = element_text(size = 12, color = \"black\"))\nplot1\n```\n\n::: {.cell-output-display}\n![](ferrugem_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nPara a severidade:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crie gráficos e reordene observações em relação ao tempo\ndf2$time <- factor(df2$time, levels = c(0, 30, 60, 90, 120, 150, 180))\n\nplot2 <- df2 |> \n  ggplot(aes(time, severity), \n             severity) + \n  geom_jitter() + \n  theme_minimal() + \n  labs(subtitle = \"Progresso da doença\",\n       x = \"Tempo (dias)\", \n       y = \"Severidade\") + \n  theme(axis.text.x = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 0.5, \n                                   vjust = 1)) + \n  theme(axis.text.y = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 1, \n                                   vjust = 0.4),\n        axis.title = element_text(size = 12, color = \"black\"))\nplot2\n```\n\n::: {.cell-output-display}\n![](ferrugem_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nPara a desfolha:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crie gráficos e reordene observações em relação ao tempo\ndf3$time <- factor(df3$time, levels = c(0, 30, 60, 90, 120, 150, 180))\n\nplot3 <- df3 |> \n  ggplot(aes(time, defolation), \n             defolation) + \n  geom_jitter() + \n  theme_minimal() + \n  labs(subtitle = \"Progresso da doença\",\n       x = \"Tempo (dias)\", \n       y = \"Desfolha\") + \n  theme(axis.text.x = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 0.5, \n                                   vjust = 1)) + \n  theme(axis.text.y = element_text(size = 12, \n                                   color = \"Black\", \n                                   hjust = 1, \n                                   vjust = 0.4),\n        axis.title = element_text(size = 12, \n                                  color = \"black\"))\nplot3\n```\n\n::: {.cell-output-display}\n![](ferrugem_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Cálculo da AACPD\n\n### Transformação de fator e variável\n\nPrimeiramente, a variável tempo e incidência/severidade/desfolha são transformadas em caracteres numéricos utilizando as funções `as.numeric` e `as.character` que convertem os valores da coluna tempo em caracteres. Isto é útil se os dados originais estiverem em outro formato (por exemplo, fatores) que precise ser convertido antes de serem numéricos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Converter tempo e incidência em variáveis numéricas\ndf1$time <- as.numeric(as.character(df1$time))\ndf1$incidence <- as.numeric(as.character(df1$incidence))\n\n# Converter tempo e severidade em variáveis numéricas\ndf2$time <- as.numeric(as.character(df2$time))\ndf2$severity <- as.numeric(as.character(df2$severity))\n\n# Converter tempo e desfolha em variáveis numéricas\ndf3$time <- as.numeric(as.character(df3$time))\ndf3$defolation <- as.numeric(as.character(df3$defolation))\n```\n:::\n\n\n### Função de cálculo AACPD\n\nInicialmente é carregada a biblioteca `Agricolae` que permite o processamento dos dados. Ela contém funções específicas para calcular a Área Sob a Curva de Progresso da Doença (AACPD), medida comum em estudos de fitopatologia. Assim, para o cálculo da AACPD foi utilizada a função `AUDPC` do pacote `Agricolae`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregar bibliotecas \nlibrary(agricolae)\nlibrary(factoextra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'factoextra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:agricolae':\n\n    hcut\n```\n\n\n:::\n:::\n\n\nFoi definida a função `audpcI`, `audpcS` e `audpcD`  com dois argumentos para cada função: `time` e `incidence`, `time` e `severity`, `time` e `defolation`, respectivamente. Dentro delas, é utilizada a função `audpc` para calcular a Área Sob a Curva do Progresso da Doença (AACPD) usando esses valores. O resultado de `audpc` é retornado como saída de `audpcI`, `audpc2` e `audpc3`oferecendo uma maneira simples e reutilizável de calcular a AACPD para dados de epidemia em estudos fitopatológicos.\n\nPara a incidência:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# AUDPC incidence\naudpcI <- function(time, incidence) {\n  return(audpc(incidence, time))\n}\n\n# Agrupar dados por genótipo e repetição\naudpc1 <- df1 |> \n  group_by(Gen, Rep) |> \n  summarise(AUDPC = audpcI(time, incidence))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gen'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n```{.r .cell-code}\naudpc1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 3\n# Groups:   Gen [168]\n     Gen   Rep AUDPC\n   <dbl> <dbl> <dbl>\n 1     1     1 1700 \n 2     1     2 2203.\n 3     1     3 1933.\n 4     1     4 6559.\n 5     1     5 2250 \n 6     2     1 8333.\n 7     2     2 7585.\n 8     2     3 7959.\n 9     2     4 6292.\n10     2     5 4347.\n# ℹ 830 more rows\n```\n\n\n:::\n:::\n\n\nPara a severidade:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# AUDPC severidade \naudpcS <- function(time, severity) {\n  return(audpc(severity, time))\n}\n# Agrupar dados por genótipo e repetição\naudpc2 <- df2 |> \n  group_by(Gen, Rep) |> \n  summarise(AUDPC = audpcS(time, severity))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gen'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n```{.r .cell-code}\naudpc2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 3\n# Groups:   Gen [168]\n     Gen   Rep AUDPC\n   <dbl> <dbl> <dbl>\n 1     1     1  50.8\n 2     1     2  28.4\n 3     1     3  25.7\n 4     1     4 154. \n 5     1     5  40.8\n 6     2     1 167. \n 7     2     2 144. \n 8     2     3 149. \n 9     2     4 168. \n10     2     5  95.1\n# ℹ 830 more rows\n```\n\n\n:::\n:::\n\n\nPara a desfolha:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# AUDPC desfolha \naudpcD <- function(time, defolation) {\n  return(audpc(defolation, time))\n}\n\n# Agrupar dados por genótipo e repetição\naudpc3 <- df3 |> \n  group_by(Gen, Rep) |> \n  summarise(AUDPC = audpcD(time, defolation))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gen'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n```{.r .cell-code}\naudpc3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 3\n# Groups:   Gen [168]\n     Gen   Rep AUDPC\n   <dbl> <dbl> <dbl>\n 1     1     1 3213.\n 2     1     2 3575 \n 3     1     3 2925 \n 4     1     4 7075 \n 5     1     5 4538.\n 6     2     1 4875 \n 7     2     2 3900 \n 8     2     3 6238.\n 9     2     4 5375 \n10     2     5 5600 \n# ℹ 830 more rows\n```\n\n\n:::\n:::\n\n\n## Novo Dataframe \n\nFoi criado um novo dataframe com os dados da AACPD de Incidência, Severidade e Desfolha. A função `left_join` do pacote `dplyr` permite combinar duas tabelas. Após obter os cálculos de AACPD para incidência, severidade e desfolha, as tabelas foram unidas  usando `left_join()` com base nas colunas `Gen` e `Rep`. Essa união de tipo esquerda preserva todas as linhas de `audpc1`, adicionando as correspondentes de `audpc2` e `audpc3` onde `Gen` e `Rep` coincidam. O resultado é um novo dataframe `AUDPC` com as colunas combinadas de `audpc1`, `audpc2` e `audpc3` para cada combinação de genótipo (`Gen`) e repetição (`Rep`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unir tabelas\nAUDPC <- audpc1 |> \n  left_join(audpc2, by = c(\"Gen\", \"Rep\")) |> \n  left_join(audpc3, by = c(\"Gen\", \"Rep\"))\nAUDPC \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 5\n# Groups:   Gen [168]\n     Gen   Rep AUDPC.x AUDPC.y AUDPC\n   <dbl> <dbl>   <dbl>   <dbl> <dbl>\n 1     1     1   1700     50.8 3213.\n 2     1     2   2203.    28.4 3575 \n 3     1     3   1933.    25.7 2925 \n 4     1     4   6559.   154.  7075 \n 5     1     5   2250     40.8 4538.\n 6     2     1   8333.   167.  4875 \n 7     2     2   7585.   144.  3900 \n 8     2     3   7959.   149.  6238.\n 9     2     4   6292.   168.  5375 \n10     2     5   4347.    95.1 5600 \n# ℹ 830 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Renomear colunas no data frame\nAUDPC <- AUDPC |> \n  rename(genotype = Gen, \n         repetition = Rep,\n         incidence = AUDPC.x,\n         severity = AUDPC.y,\n         defoliation = AUDPC)\nAUDPC\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 840 × 5\n# Groups:   genotype [168]\n   genotype repetition incidence severity defoliation\n      <dbl>      <dbl>     <dbl>    <dbl>       <dbl>\n 1        1          1     1700      50.8       3213.\n 2        1          2     2203.     28.4       3575 \n 3        1          3     1933.     25.7       2925 \n 4        1          4     6559.    154.        7075 \n 5        1          5     2250      40.8       4538.\n 6        2          1     8333.    167.        4875 \n 7        2          2     7585.    144.        3900 \n 8        2          3     7959.    149.        6238.\n 9        2          4     6292.    168.        5375 \n10        2          5     4347.     95.1       5600 \n# ℹ 830 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# A função `write.csv` para escrever um data frame\nwrite.csv(AUDPC, \n          file = \"ferrugem_AUDPC.csv\", \n          row.names = FALSE)\n```\n:::\n\n\nÉ recomendável renomear as colunas das variáveis para facilitar as estimativas do ANOVA e a comparação de médias. Isso é feito utilizando a função `rename`, que permite mudar os nomes das colunas no DataFrame. Por exemplo, `Gen` é renomeado para `genotype`, `Rep` para `repetition`, `AUDPC.x` (resultante da primeira união) para `incidence`, `AUDPC.y` (resultante da segunda união) para `severity`, e `AUDPC` (resultante da terceira união) para `defoliation`. Finalmente, o DataFrame é exportado para um arquivo CSV usando a função `write.csv()`, o que facilita o armazenamento e a posterior utilização dos dados.\n\n",
    "supporting": [
      "ferrugem_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}