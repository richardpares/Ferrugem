{"title":"Análise Multivariada","markdown":{"yaml":{"title":"Análise Multivariada","author":"Amanda Pereira Honório & Richard Pardes-Espinosa","date":"2024-06-26","format":"html","toc":true,"number-sections":true,"code-fold":"show"},"headingText":"Preparar dados","containsRefs":false,"markdown":"\n\n\nPara realizar as análises, houve o carregamento dos pacotes abaixo:\n\n```{r}\n# Carregar bibliotecas\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyverse)\n```\n\n### Importação dos dados\n\nComo o DataFrame contendo os dados da área abaixo da curva de progresso da doença da ferrugem do cafeeiro está localizado em uma planilha do Excel, utilizou-se a função `read_csv` do pacote `readr` para realizar a importação dos dados. O DataFrame foi então atribuído ao objeto denominado `dato`.\n\n```{r}\n# Chamar dataframe\ndato <- read_csv(\"ferrugem_AUDPC.csv\")\ndato <- dato[,c(-2)]\ndato\n```\n\nNote que eliminamos a segunda coluna do *dataframe* utilizando a notação `dato[, c(-2)]`, que seleciona todas as linhas e todas as colunas, exceto a segunda. O operador `-` indica a exclusão dessa coluna.\n\nEm seguida, foi criado um novo *dataframe* para calcular as médias por tratamento utilizando a função `mean`. Além disso, renomeamos as variáveis para facilitar seu manejo.\n\n```{r}\n# Calcular as médias por tratamento\ndato1 <- dato |> \n  group_by(genotype) |> \n  summarise(\n    mean_incidence = mean(incidence, na.rm = TRUE),\n    mean_severity = mean(severity, na.rm = TRUE),\n    mean_defoliation = mean(defoliation, na.rm = TRUE)\n  )\ndato1\n```\n\n\n## Análisis de Componentes Principales (PCA)\n\nA análise de componentes principais (PCA) nos permite resumir e visualizar a informação em um conjunto de dados que inclui 168 genótipos de café avaliados por severidade, incidência e desfolha. Cada uma dessas variáveis representa uma dimensão em nossos dados. \n\nO PCA extrai a informação chave desses dados multivariados e a apresenta em poucas variáveis novas chamadas componentes principais, que são combinações lineares das variáveis originais. O objetivo é identificar as principais direções ao longo das quais a variação nos dados é máxima.\n\nInicialmente os genótipos foram extraídos do dataframe utilizando a função `textshape::column_to_rownames` do pacote `textshape`. Essa função foi empregada para converter a primeira coluna do dataframe em nomes de fila, permitindo uma organização mais adequada dos dados para a análisis subsequente.\n\n```{r}\n# Cargar pacote\nlibrary(textshape)\n\n# Alterar a coluna 'genotype' para nomes de linha\ndato1 <- textshape::column_to_rownames(dato1, loc = 1)\ndato1\n```\n\nO PCA foi realizado utilizando a função `PCA()` do pacote `FactoMineR`. Utilizamos o dataframe **`dato1`**, que contém os valores médios das variáveis AUDPC de incidência, severidade e desfolha. O argumento **`scale.unit = TRUE`** foi utilizado para escalar os dados, ajustando suas unidades de medida para ter média zero e desvio padrão igual a um, tanto positivo quanto negativo. Além disso, foram utilizados os argumentos **`ncp = 3`** e **`graph = FALSE`** para calcular três componentes principais e evitar a geração automática de gráficos do PCA.\n\n```{r}\n# Cargar bibliotecas\nlibrary(FactoMineR)\nlibrary(factoextra)\n\n# Estimar os eigen-value\npca.results <- PCA(dato1, \n    scale.unit = TRUE, \n    ncp = 3, \n    graph = FALSE)\npca.results\n```\n\nApós calcular o PCA com `PCA()`, utiliza-se `fviz_pca_ind()` para visualizar a distribuição dos genótipos no espaço das componentes principais. Ao especificar `col.ind = \"cos2\"` e `gradient.cols`, cada genótipo é atribuído a uma cor que reflete sua contribuição para as componentes principais. Esse método permite uma interpretação visual imediata da organização dos genótipos em relação à estrutura dos dados reduzidos pelo PCA.\n\n```{r}\n# Visualizar a distribuição dos genótipos\nfviz_pca_ind(pca.results, \n             col.ind = \"cos2\", \n             gradient.cols = c(\"#00AFBB\", \n                               \"#E7B800\", \n                               \"#FC4E07\"),\n             repel = FALSE)\n```\n\n### Distância euclidiana\n\nLa distancia es estimada utilizando la función `dist()` con el método `\"euclidean\"` a partir de los datos normalizados con la función `scale()`. Para Visualizar la matriz de distancia nos apoyamos la función `fviz_dist()` del paquete `factoextra` ara visualizar la matriz de distancia. Esta función colorea las celdas de la matriz según los valores de distancia, utilizando un gradiente de colores que va de azul a rojo.\n\n```{r}\n# Cargar biblioteca\nlibrary(stats)\n\n# Normalizar dados\ndf.scale <- scale(dato1)\n\n# Calcular a distância\ndist.eucl <- dist(df.scale, \n                method = \"euclidean\")\n\n# Transformar resultados a matriz\nround(as.matrix(dist.eucl)[1:168, 1:168], 2)\n\n# Visualização da matriz de distância\nfviz_dist(dist.obj = dist.eucl, \n          lab_size = 3,\n          gradient = list(low = \"#00AFBB\", \n                          mid = \"white\", \n                          high = \"#FC4E07\")) + \n  theme(legend.position = \"none\")\n```\n\n**Vamos con un ejemplo para mejorar la explicación:**\n\n```{r}\n# 10 genotipos\nset.seed(123)  \ngenotype_azar <- sample(1:168, 10)\n\n# Subset de dados \ndato1_subset <- dato1[genotype_azar, ]\n\n# Normalizar dados\ndf.scale1 <- scale(dato1_subset)\ndist.eucl1 <- dist(df.scale1, method = \"euclidean\")\nround(as.matrix(dist.eucl1), 2)\n\n# Visualização da matriz de distância\nfviz_dist(dist.obj = dist.eucl1, \n          lab_size = 10,\n          gradient = list(low = \"#00AFBB\", mid = \"white\", high = \"#FC4E07\"))\n```\n\nAs distâncias calculadas revelam diferenças e semelhanças entre os genótipos. Uma menor distância indica uma maior semelhança nas características epidemiológicas avaliadas, enquanto uma maior distância indica maiores diferenças. Por exemplo, os genótipos 1 e 7 têm uma distância de apenas 0,28, sugerindo uma alta semelhança, enquanto o genótipo 5 e 10 mostram a maior distância (5,01), indicando que esses genótipos são significativamente diferentes. Esta análise fornece informações cruciais para entender a variabilidade fenotípica em uma população, facilitando a tomada de decisões em programas de melhoramento genético e a compreensão da estrutura genética do café em termos de resistência a **H. vastatrix**.\n\n### Similaridade e Dendograma \n\nUsaremos os dados escalados **dist.eucl** e a função `hclust()` para realizar o agrupamento hierárquico UPGMA. A estrutura será visualizada em um dendrograma usando a função `fviz_dend()`, que mostrará os agrupamentos dos genótipos. \n\n```{r}\n# Cálculo da similaridade\nhc.results <- hclust(dist.eucl, \n                    method = \"average\")\n\n# Visualização do dendrograma.\nfviz_dend(hc.results,\n          cex = 0.7) +\n  labs(title = \"Herarchical clustering\",\n       subtitle = \"Distância euclidiana, UPGMA\")\n```\n\n### Coeficiente de Correlação Cofenético (CCC)\n\nVamos avaliar a qualidade do agrupamento usando o valor do coeficiente de correlação cophenético (CCC). Primeiramente, utilizamos a função `cophenetic()` para calcular a matriz de distâncias cophenéticas a partir do dendrograma. Em seguida, estimamos o CCC comparando a matriz de distâncias original (`dist.eucl`) com a matriz de distâncias cophenéticas (`res.coph`). Este coeficiente indica o quão bem as distâncias no dendrograma representam as distâncias originais entre os dados.\"\n\n```{r}\n# Distância Cofenético \nres.coph <- cophenetic(hc.results)\nres.coph\n\n# Correlação entre distância cophenética e distância euclidiana\ncor(dist.eucl, res.coph)\n```\n\n### Determinação do número de grupos\n\nUtiliza-se a biblioteca `NbClust` para realizar uma análise exaustiva e determinar o número ótimo de clusters com base em diferentes índices de validação. Nos argumentos, especifica-se o número mínimo (`min.nc`) e máximo (`max.nc`) de clusters a serem avaliados, neste caso, de 2 a 10. Emprega-se o método \"average\" e calculam-se todos os índices disponíveis no pacote NbClust para avaliar a qualidade dos clusters.\n\n```{r}\n# Cargar bibliotecas\nlibrary(NbClust)\n\n# Cálculo os grupos\nnb <- NbClust(df.scale,\n              distance = \"euclidean\", \n              min.nc = 2, max.nc = 10, \n              method = \"average\",\n              index = \"alllong\")\nnb\n```\n\nO índice Dindex e o índice Hubert são métodos gráficos usados para identificar o número ótimo de clusters através de gráficos de linhas, como mostrado na saída da função `nbClust()`. Neste caso, o índice Hubert sugere 4 como o melhor número de clusters, enquanto o índice Dindex propõe 7 clusters como ótimos.\n\n### Clustering\n\nO agrupamento é realizado utilizando a função `kmeans()`, especificando 4 clusters e 100 inícios diferentes para garantir a estabilidade dos resultados.\n\n```{r}\n# Cargar bibliotecas\nlibrary(factoextra)\nlibrary(NbClust)\n\n# Agrupar com 4 clusters e 100 inícios diferentes\nset.seed(123)\nkm.results <- kmeans(df.scale, \n                     centers = 4, \n                     nstart = 100)\nkm.results\n\n# Agrupar com 4 clusters e 100 inícios diferentes\ndato1$Cluster <- km.results$cluster\ndato1\n```\n\nOs resultados do clustering são atribuídos à base de dados original dato1, adicionando uma coluna que indica o cluster atribuído a cada genótipo.\n\n\n## PCA-Biplot\n\nUtilizaremos um PCA-Biplot para simplificar a análise dos componentes principais (PCA) e visualizar a correlação entre as variáveis epidemiológicas e os genótipos avaliados.Primero, convertimos a coluna `Cluster` em um fator e depois a removemos do dataframe para estimar os componentes principais, que são salvos em um vetor chamado `df.clust.pca`. Usamos a função `fviz_pca_biplot()` para criar um biplot de PCA e adicionamos argumentos para melhorar a apresentação do gráfico.\n\n```{r}\n# Converta a coluna 'Cluster' em um fator\ndato1$Cluster <- as.factor(dato1$Cluster)\ndato1\n\n# PCA\ndf.clust.pca <- PCA(dato1[,-4], graph = FALSE)\ndf.clust.pca\n\n# Biplot-PCA\nfviz_pca_biplot(df.clust.pca,\n                addEllipses = TRUE,\n                geom.ind = \"point\",\n                pointshape = 21,\n                pointsize = 2.0,\n                fill.ind = dato1$Cluster,\n                col.ind = \"black\",\n                col.var = factor(c(\"mean_incidence\",\n                                   \"mean_severity\",\n                                   \"mean_defoliation\")),\n                legend.title = list(fill = \"Clusters\", \n                                    color = \"Variables\"),\n                repel = FALSE) +\n  ggpubr::fill_palette(\"jco\") + \n  ggpubr::color_palette(\"npg\") \n```\n\n\n## Boxplot\n\nO seguinte script e o gráfico de boxplot são projetados para visualizar as diferenças na incidência média entre quatro grupos identificados no conjunto de dados **dato1**.\n\n**Para a incidência:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_incidence, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Incidência\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n**Para a Severidade:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_severity, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Severidade\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n\n**Para a desfola:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_defoliation, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Desfolha\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n\n\n## Conclusões \n\nA identificação de genótipos de café resistentes a H. vastatrix é de grande importância para a seleção e melhoria genética da cultura. Neste estudo, avaliamos a resistência à ferrugem amarela utilizando três variáveis AUDPC de incidência, severidade e desfolha. Calculamos a distância euclidiana entre os genótipos usando essas variáveis e aplicamos um método de agrupamento hierárquico, o que nos permitiu identificar quatro grupos divergentes. Dentro desses grupos, o grupo 3 (representado em cinza) destacou-se como o mais resistente à doença.\"\n\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n## Preparar dados\n\nPara realizar as análises, houve o carregamento dos pacotes abaixo:\n\n```{r}\n# Carregar bibliotecas\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyverse)\n```\n\n### Importação dos dados\n\nComo o DataFrame contendo os dados da área abaixo da curva de progresso da doença da ferrugem do cafeeiro está localizado em uma planilha do Excel, utilizou-se a função `read_csv` do pacote `readr` para realizar a importação dos dados. O DataFrame foi então atribuído ao objeto denominado `dato`.\n\n```{r}\n# Chamar dataframe\ndato <- read_csv(\"ferrugem_AUDPC.csv\")\ndato <- dato[,c(-2)]\ndato\n```\n\nNote que eliminamos a segunda coluna do *dataframe* utilizando a notação `dato[, c(-2)]`, que seleciona todas as linhas e todas as colunas, exceto a segunda. O operador `-` indica a exclusão dessa coluna.\n\nEm seguida, foi criado um novo *dataframe* para calcular as médias por tratamento utilizando a função `mean`. Além disso, renomeamos as variáveis para facilitar seu manejo.\n\n```{r}\n# Calcular as médias por tratamento\ndato1 <- dato |> \n  group_by(genotype) |> \n  summarise(\n    mean_incidence = mean(incidence, na.rm = TRUE),\n    mean_severity = mean(severity, na.rm = TRUE),\n    mean_defoliation = mean(defoliation, na.rm = TRUE)\n  )\ndato1\n```\n\n\n## Análisis de Componentes Principales (PCA)\n\nA análise de componentes principais (PCA) nos permite resumir e visualizar a informação em um conjunto de dados que inclui 168 genótipos de café avaliados por severidade, incidência e desfolha. Cada uma dessas variáveis representa uma dimensão em nossos dados. \n\nO PCA extrai a informação chave desses dados multivariados e a apresenta em poucas variáveis novas chamadas componentes principais, que são combinações lineares das variáveis originais. O objetivo é identificar as principais direções ao longo das quais a variação nos dados é máxima.\n\nInicialmente os genótipos foram extraídos do dataframe utilizando a função `textshape::column_to_rownames` do pacote `textshape`. Essa função foi empregada para converter a primeira coluna do dataframe em nomes de fila, permitindo uma organização mais adequada dos dados para a análisis subsequente.\n\n```{r}\n# Cargar pacote\nlibrary(textshape)\n\n# Alterar a coluna 'genotype' para nomes de linha\ndato1 <- textshape::column_to_rownames(dato1, loc = 1)\ndato1\n```\n\nO PCA foi realizado utilizando a função `PCA()` do pacote `FactoMineR`. Utilizamos o dataframe **`dato1`**, que contém os valores médios das variáveis AUDPC de incidência, severidade e desfolha. O argumento **`scale.unit = TRUE`** foi utilizado para escalar os dados, ajustando suas unidades de medida para ter média zero e desvio padrão igual a um, tanto positivo quanto negativo. Além disso, foram utilizados os argumentos **`ncp = 3`** e **`graph = FALSE`** para calcular três componentes principais e evitar a geração automática de gráficos do PCA.\n\n```{r}\n# Cargar bibliotecas\nlibrary(FactoMineR)\nlibrary(factoextra)\n\n# Estimar os eigen-value\npca.results <- PCA(dato1, \n    scale.unit = TRUE, \n    ncp = 3, \n    graph = FALSE)\npca.results\n```\n\nApós calcular o PCA com `PCA()`, utiliza-se `fviz_pca_ind()` para visualizar a distribuição dos genótipos no espaço das componentes principais. Ao especificar `col.ind = \"cos2\"` e `gradient.cols`, cada genótipo é atribuído a uma cor que reflete sua contribuição para as componentes principais. Esse método permite uma interpretação visual imediata da organização dos genótipos em relação à estrutura dos dados reduzidos pelo PCA.\n\n```{r}\n# Visualizar a distribuição dos genótipos\nfviz_pca_ind(pca.results, \n             col.ind = \"cos2\", \n             gradient.cols = c(\"#00AFBB\", \n                               \"#E7B800\", \n                               \"#FC4E07\"),\n             repel = FALSE)\n```\n\n### Distância euclidiana\n\nLa distancia es estimada utilizando la función `dist()` con el método `\"euclidean\"` a partir de los datos normalizados con la función `scale()`. Para Visualizar la matriz de distancia nos apoyamos la función `fviz_dist()` del paquete `factoextra` ara visualizar la matriz de distancia. Esta función colorea las celdas de la matriz según los valores de distancia, utilizando un gradiente de colores que va de azul a rojo.\n\n```{r}\n# Cargar biblioteca\nlibrary(stats)\n\n# Normalizar dados\ndf.scale <- scale(dato1)\n\n# Calcular a distância\ndist.eucl <- dist(df.scale, \n                method = \"euclidean\")\n\n# Transformar resultados a matriz\nround(as.matrix(dist.eucl)[1:168, 1:168], 2)\n\n# Visualização da matriz de distância\nfviz_dist(dist.obj = dist.eucl, \n          lab_size = 3,\n          gradient = list(low = \"#00AFBB\", \n                          mid = \"white\", \n                          high = \"#FC4E07\")) + \n  theme(legend.position = \"none\")\n```\n\n**Vamos con un ejemplo para mejorar la explicación:**\n\n```{r}\n# 10 genotipos\nset.seed(123)  \ngenotype_azar <- sample(1:168, 10)\n\n# Subset de dados \ndato1_subset <- dato1[genotype_azar, ]\n\n# Normalizar dados\ndf.scale1 <- scale(dato1_subset)\ndist.eucl1 <- dist(df.scale1, method = \"euclidean\")\nround(as.matrix(dist.eucl1), 2)\n\n# Visualização da matriz de distância\nfviz_dist(dist.obj = dist.eucl1, \n          lab_size = 10,\n          gradient = list(low = \"#00AFBB\", mid = \"white\", high = \"#FC4E07\"))\n```\n\nAs distâncias calculadas revelam diferenças e semelhanças entre os genótipos. Uma menor distância indica uma maior semelhança nas características epidemiológicas avaliadas, enquanto uma maior distância indica maiores diferenças. Por exemplo, os genótipos 1 e 7 têm uma distância de apenas 0,28, sugerindo uma alta semelhança, enquanto o genótipo 5 e 10 mostram a maior distância (5,01), indicando que esses genótipos são significativamente diferentes. Esta análise fornece informações cruciais para entender a variabilidade fenotípica em uma população, facilitando a tomada de decisões em programas de melhoramento genético e a compreensão da estrutura genética do café em termos de resistência a **H. vastatrix**.\n\n### Similaridade e Dendograma \n\nUsaremos os dados escalados **dist.eucl** e a função `hclust()` para realizar o agrupamento hierárquico UPGMA. A estrutura será visualizada em um dendrograma usando a função `fviz_dend()`, que mostrará os agrupamentos dos genótipos. \n\n```{r}\n# Cálculo da similaridade\nhc.results <- hclust(dist.eucl, \n                    method = \"average\")\n\n# Visualização do dendrograma.\nfviz_dend(hc.results,\n          cex = 0.7) +\n  labs(title = \"Herarchical clustering\",\n       subtitle = \"Distância euclidiana, UPGMA\")\n```\n\n### Coeficiente de Correlação Cofenético (CCC)\n\nVamos avaliar a qualidade do agrupamento usando o valor do coeficiente de correlação cophenético (CCC). Primeiramente, utilizamos a função `cophenetic()` para calcular a matriz de distâncias cophenéticas a partir do dendrograma. Em seguida, estimamos o CCC comparando a matriz de distâncias original (`dist.eucl`) com a matriz de distâncias cophenéticas (`res.coph`). Este coeficiente indica o quão bem as distâncias no dendrograma representam as distâncias originais entre os dados.\"\n\n```{r}\n# Distância Cofenético \nres.coph <- cophenetic(hc.results)\nres.coph\n\n# Correlação entre distância cophenética e distância euclidiana\ncor(dist.eucl, res.coph)\n```\n\n### Determinação do número de grupos\n\nUtiliza-se a biblioteca `NbClust` para realizar uma análise exaustiva e determinar o número ótimo de clusters com base em diferentes índices de validação. Nos argumentos, especifica-se o número mínimo (`min.nc`) e máximo (`max.nc`) de clusters a serem avaliados, neste caso, de 2 a 10. Emprega-se o método \"average\" e calculam-se todos os índices disponíveis no pacote NbClust para avaliar a qualidade dos clusters.\n\n```{r}\n# Cargar bibliotecas\nlibrary(NbClust)\n\n# Cálculo os grupos\nnb <- NbClust(df.scale,\n              distance = \"euclidean\", \n              min.nc = 2, max.nc = 10, \n              method = \"average\",\n              index = \"alllong\")\nnb\n```\n\nO índice Dindex e o índice Hubert são métodos gráficos usados para identificar o número ótimo de clusters através de gráficos de linhas, como mostrado na saída da função `nbClust()`. Neste caso, o índice Hubert sugere 4 como o melhor número de clusters, enquanto o índice Dindex propõe 7 clusters como ótimos.\n\n### Clustering\n\nO agrupamento é realizado utilizando a função `kmeans()`, especificando 4 clusters e 100 inícios diferentes para garantir a estabilidade dos resultados.\n\n```{r}\n# Cargar bibliotecas\nlibrary(factoextra)\nlibrary(NbClust)\n\n# Agrupar com 4 clusters e 100 inícios diferentes\nset.seed(123)\nkm.results <- kmeans(df.scale, \n                     centers = 4, \n                     nstart = 100)\nkm.results\n\n# Agrupar com 4 clusters e 100 inícios diferentes\ndato1$Cluster <- km.results$cluster\ndato1\n```\n\nOs resultados do clustering são atribuídos à base de dados original dato1, adicionando uma coluna que indica o cluster atribuído a cada genótipo.\n\n\n## PCA-Biplot\n\nUtilizaremos um PCA-Biplot para simplificar a análise dos componentes principais (PCA) e visualizar a correlação entre as variáveis epidemiológicas e os genótipos avaliados.Primero, convertimos a coluna `Cluster` em um fator e depois a removemos do dataframe para estimar os componentes principais, que são salvos em um vetor chamado `df.clust.pca`. Usamos a função `fviz_pca_biplot()` para criar um biplot de PCA e adicionamos argumentos para melhorar a apresentação do gráfico.\n\n```{r}\n# Converta a coluna 'Cluster' em um fator\ndato1$Cluster <- as.factor(dato1$Cluster)\ndato1\n\n# PCA\ndf.clust.pca <- PCA(dato1[,-4], graph = FALSE)\ndf.clust.pca\n\n# Biplot-PCA\nfviz_pca_biplot(df.clust.pca,\n                addEllipses = TRUE,\n                geom.ind = \"point\",\n                pointshape = 21,\n                pointsize = 2.0,\n                fill.ind = dato1$Cluster,\n                col.ind = \"black\",\n                col.var = factor(c(\"mean_incidence\",\n                                   \"mean_severity\",\n                                   \"mean_defoliation\")),\n                legend.title = list(fill = \"Clusters\", \n                                    color = \"Variables\"),\n                repel = FALSE) +\n  ggpubr::fill_palette(\"jco\") + \n  ggpubr::color_palette(\"npg\") \n```\n\n\n## Boxplot\n\nO seguinte script e o gráfico de boxplot são projetados para visualizar as diferenças na incidência média entre quatro grupos identificados no conjunto de dados **dato1**.\n\n**Para a incidência:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_incidence, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Incidência\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n**Para a Severidade:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_severity, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Severidade\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n\n**Para a desfola:**\n\n```{r}\ndato1 |> \n  ggplot(aes(Cluster, mean_defoliation, fill = Cluster)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Grupos\",\n       y = \"Desfolha\") +\n  scale_fill_brewer(palette = \"7\") +\n  theme(axis.title = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.x = element_text(size = 12, color = \"black\")) +\n  theme(axis.text.y = element_text(size = 12, color = \"black\")) \n```\n\n\n## Conclusões \n\nA identificação de genótipos de café resistentes a H. vastatrix é de grande importância para a seleção e melhoria genética da cultura. Neste estudo, avaliamos a resistência à ferrugem amarela utilizando três variáveis AUDPC de incidência, severidade e desfolha. Calculamos a distância euclidiana entre os genótipos usando essas variáveis e aplicamos um método de agrupamento hierárquico, o que nos permitiu identificar quatro grupos divergentes. Dentro desses grupos, o grupo 3 (representado em cinza) destacou-se como o mais resistente à doença.\"\n\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"ferrugem2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","theme":"cosmo","title":"Análise Multivariada","author":"Amanda Pereira Honório & Richard Pardes-Espinosa","date":"2024-06-26"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}